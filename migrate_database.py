# comphone_integrated/migrate_database.py

import os
import sys
import traceback
from flask import Flask
from comphone import create_app, db
from comphone.models import User, Customer, Product, Sale, ServiceJob, ServicePartUsage

class DatabaseMigrator:
    """Migration script for old system ‚Üí new Comphone Integrated DB."""

    def __init__(self, app, dry_run=False):
        self.app = app
        self.dry_run = dry_run

    def migrate(self):
        with self.app.app_context():
            try:
                print("üîÑ Starting migration...")
                db.create_all()

                self.migrate_users()
                self.migrate_customers()
                self.migrate_products()
                self.migrate_sales()
                self.migrate_service_jobs()

                db.session.commit()
                print("‚úÖ Migration completed successfully!")
            except Exception as e:
                db.session.rollback()
                print("‚ùå Migration failed:", e)
                print(traceback.format_exc())

    def migrate_users(self):
        print("  - Migrating users...")
        # *** ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡πÄ‡∏û‡∏¥‡πà‡∏° admin user (‡∏à‡∏£‡∏¥‡∏á‡∏Ñ‡∏ß‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏à‡∏≤‡∏Å source ‡πÄ‡∏Å‡πà‡∏≤) ***
        if not User.query.filter_by(username='admin').first():
            admin = User(username='admin', email='admin@comphone.com', is_admin=True)
            admin.set_password('adminpass')
            db.session.add(admin)

    def migrate_customers(self):
        print("  - Migrating customers...")
        # *** ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡πÄ‡∏û‡∏¥‡πà‡∏° dummy customer (‡∏à‡∏£‡∏¥‡∏á‡∏Ñ‡∏ß‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏à‡∏≤‡∏Å source ‡πÄ‡∏Å‡πà‡∏≤) ***
        if not Customer.query.first():
            customer = Customer(name='‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á', phone='0812345678', address='‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á')
            db.session.add(customer)

    def migrate_products(self):
        print("  - Migrating products...")
        # *** ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡πÄ‡∏û‡∏¥‡πà‡∏° dummy product (‡∏à‡∏£‡∏¥‡∏á‡∏Ñ‡∏ß‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏à‡∏≤‡∏Å source ‡πÄ‡∏Å‡πà‡∏≤) ***
        if not Product.query.first():
            product = Product(name='‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á', cost_price=100, selling_price=150, quantity=10)
            db.session.add(product)

    def migrate_sales(self):
        print("  - Migrating sales...")
        # *** ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡∏Ç‡πâ‡∏≤‡∏° migration ‡∏à‡∏£‡∏¥‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Sale ‡πÑ‡∏õ‡∏Å‡πà‡∏≠‡∏ô ***

    def migrate_service_jobs(self):
        print("  - Migrating service jobs...")
        # *** ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡∏Ç‡πâ‡∏≤‡∏° migration ‡∏à‡∏£‡∏¥‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ServiceJob ‡πÑ‡∏õ‡∏Å‡πà‡∏≠‡∏ô ***

if __name__ == "__main__":
    # ‡∏Ñ‡∏ß‡∏£‡∏ï‡∏±‡πâ‡∏á env ‡∏Å‡πà‡∏≠‡∏ô‡∏£‡∏±‡∏ô ‡πÄ‡∏ä‡πà‡∏ô export FLASK_ENV=development
    app = create_app()
    migrator = DatabaseMigrator(app)
    migrator.migrate()
